Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.1'\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ build.gradle	(date 1605080921162)
@@ -8,7 +8,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.0.1'
+        classpath 'com.android.tools.build:gradle:4.1.1'
         classpath 'com.google.gms:google-services:4.3.3'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: app/src/main/java/com/example/snapy/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.snapy;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class SignUp extends AppCompatActivity {\r\n    TextView signUptextview, gender;\r\n    EditText name, email, dateOfBirth, password;\r\n    Button signUpButtton;\r\n    RadioButton male, female, other;\r\n    private FirebaseAuth mAuth;\r\n    FirebaseUser currentUser;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sign_up);\r\n        signUptextview = findViewById(R.id.textView2);\r\n        name = findViewById(R.id.name);\r\n        email = findViewById(R.id.editTextTextEmailAddress);\r\n        dateOfBirth = findViewById(R.id.dateOfBirth);\r\n        gender = findViewById(R.id.gender);\r\n        male = findViewById(R.id.simpleRadioButton);\r\n        female = findViewById(R.id.simpleRadioButton1);\r\n        other = findViewById(R.id.simpleRadioButton2);\r\n        signUpButtton = findViewById(R.id.signUpButton);\r\n        password = findViewById(R.id.password);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        currentUser = mAuth.getCurrentUser();\r\n\r\n    }\r\n\r\n    public void LoginActivity() {\r\n        Intent intent = new Intent(this, LogIn.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void register(View view) {\r\n        signUpFunction();\r\n    }\r\n\r\n    public void sendVerificationEmail() {\r\n        currentUser.sendEmailVerification().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if (task.isSuccessful()) {\r\n                    Toast.makeText(SignUp.this, \"Register Successfully,please verify your email !!\", Toast.LENGTH_SHORT).show();\r\n                    email.setText(\"\");\r\n                    password.setText(\"\");\r\n                    LoginActivity();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void signUpFunction() {\r\n        mAuth.createUserWithEmailAndPassword(email.getText().toString(), password.getText().toString())\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            sendVerificationEmail();\r\n\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                        } else {\r\n\r\n                            Log.e(\"Authentication\",task.getException().toString());\r\n                            Toast.makeText(getApplicationContext(), \"Authentication failed\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/snapy/SignUp.java	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ app/src/main/java/com/example/snapy/SignUp.java	(date 1605557734936)
@@ -1,11 +1,9 @@
 package com.example.snapy;
 
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
+import android.util.Patterns;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
@@ -13,17 +11,34 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 
-public class SignUp extends AppCompatActivity {
-    TextView signUptextview, gender;
-    EditText name, email, dateOfBirth, password;
-    Button signUpButtton;
-    RadioButton male, female, other;
+import java.util.regex.Pattern;
+
+public class SignUp extends AppCompatActivity{
+
+    private static final Pattern PASSWORD_PATTERN =
+            Pattern.compile("^" +
+                    //"(?=.*[0-9])" +         //at least 1 digit
+                    //"(?=.*[a-z])" +         //at least 1 lower case letter
+                    //"(?=.*[A-Z])" +         //at least 1 upper case letter
+                    "(?=.*[a-zA-Z])" +      //any letter
+                    "(?=.*[@#$%^&+=])" +    //at least 1 special character
+                    "(?=\\S+$)" +           //no white spaces
+                    ".{4,}" +               //at least 4 characters
+                    "$");
+
+    TextView tvSignup;
+    EditText etnameReg, etemailReg, etDobReg, etPasswrdReg;
+    Button btnSignup;
+    RadioButton rbmaleReg, rbfemaleReg, rbotherReg;
     private FirebaseAuth mAuth;
     FirebaseUser currentUser;
 
@@ -31,38 +46,99 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sign_up);
-        signUptextview = findViewById(R.id.textView2);
-        name = findViewById(R.id.name);
-        email = findViewById(R.id.editTextTextEmailAddress);
-        dateOfBirth = findViewById(R.id.dateOfBirth);
-        gender = findViewById(R.id.gender);
-        male = findViewById(R.id.simpleRadioButton);
-        female = findViewById(R.id.simpleRadioButton1);
-        other = findViewById(R.id.simpleRadioButton2);
-        signUpButtton = findViewById(R.id.signUpButton);
-        password = findViewById(R.id.password);
+        tvSignup = findViewById(R.id.tvSignUp);
+        etnameReg = findViewById(R.id.etnameregister);
+        etemailReg = findViewById(R.id.etEmailregister);
+        etDobReg = findViewById(R.id.etDobregister);
+        etPasswrdReg = findViewById(R.id.etpasswrdregister);
+        rbmaleReg = findViewById(R.id.rbmaleregister);
+        rbfemaleReg = findViewById(R.id.rbfemaleregister);
+        rbotherReg = findViewById(R.id.rbOtherregister);
+        btnSignup = findViewById(R.id.btnSignup);
+
         mAuth = FirebaseAuth.getInstance();
         currentUser = mAuth.getCurrentUser();
 
     }
 
+    public void registerUser(View v) {
+        String fullName = etnameReg.getText().toString().trim();
+        String password = etPasswrdReg.getText().toString().trim();
+        String dob = etDobReg.getText().toString().trim();
+        String email = etemailReg.getText().toString().trim();
+
+        if (fullName.isEmpty()) {
+            etnameReg.setError("Full Name is required");
+            etnameReg.requestFocus();
+            return;
+        }
+
+        if(dob.isEmpty()){
+            etDobReg.setError("Date of Birth is required");
+            etDobReg.requestFocus();
+            return;
+        }
+
+        if (email.isEmpty()) {
+            etemailReg.setError("Email is required");
+            etemailReg.requestFocus();
+            return;
+        }
+
+        if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
+            etemailReg.setError("Please provide valid email");
+            etemailReg.requestFocus();
+            return;
+        }
+
+        if (password.isEmpty()) {
+            etPasswrdReg.setError("Password is required");
+            etPasswrdReg.requestFocus();
+            return;
+        }
+
+        if (password.length() < 6) {
+            etPasswrdReg.setError("Min password length must be 6 characters");
+            etPasswrdReg.requestFocus();
+            return;
+        }
+
+        if (!PASSWORD_PATTERN.matcher(password).matches()){
+            etPasswrdReg.setError("Password too weak");
+            etPasswrdReg.requestFocus();
+            return;
+        }
+
+        signUpFunction();
+    }
+
+   /* private boolean validateEmail() {
+        String emailInput = etemailReg.getText().toString().trim();
+        if (emailInput.isEmpty()) {
+            etemailReg.setError("Field can't be empty");
+            return false;
+        } else if (!Patterns.EMAIL_ADDRESS.matcher(emailInput).matches()) {
+            etemailReg.setError("Please enter a valid email address");
+            return false;
+        } else {
+            etemailReg.setError(null);
+            return true;
+        }
+    }*/
+
     public void LoginActivity() {
         Intent intent = new Intent(this, LogIn.class);
         startActivity(intent);
     }
 
-    public void register(View view) {
-        signUpFunction();
-    }
-
     public void sendVerificationEmail() {
         currentUser.sendEmailVerification().addOnCompleteListener(new OnCompleteListener<Void>() {
             @Override
             public void onComplete(@NonNull Task<Void> task) {
                 if (task.isSuccessful()) {
                     Toast.makeText(SignUp.this, "Register Successfully,please verify your email !!", Toast.LENGTH_SHORT).show();
-                    email.setText("");
-                    password.setText("");
+                    etemailReg.setText("");
+                    etPasswrdReg.setText("");
                     LoginActivity();
                 }
 
@@ -72,23 +148,19 @@
     }
 
     public void signUpFunction() {
-        mAuth.createUserWithEmailAndPassword(email.getText().toString(), password.getText().toString())
+        mAuth.createUserWithEmailAndPassword(etemailReg.getText().toString(), etPasswrdReg.getText().toString())
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
                     public void onComplete(@NonNull Task<AuthResult> task) {
                         if (task.isSuccessful()) {
                             sendVerificationEmail();
-
                             FirebaseUser user = mAuth.getCurrentUser();
-
                         } else {
 
                             Log.e("Authentication",task.getException().toString());
                             Toast.makeText(getApplicationContext(), "Authentication failed",
                                     Toast.LENGTH_SHORT).show();
                         }
-
-
                     }
                 });
     }
Index: app/src/main/res/layout/activity_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".SignUp\"\r\n    android:orientation=\"vertical\"\r\n    >\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"100dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:gravity=\"center\"\r\n        android:text=\"SignUp\"\r\n        android:textColor=\"#F44336\"\r\n        android:textSize=\"40sp\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/name\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        android:maxLines=\"1\"\r\n        android:textSize=\"20sp\"\r\n        android:hint=\"Enter your Name\"\r\n        android:inputType=\"textPersonName\"\r\n        />\r\n\r\n    <EditText\r\n        android:id=\"@+id/editTextTextEmailAddress\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        android:ems=\"10\"\r\n        android:maxLines=\"1\"\r\n        android:hint=\"Email \"\r\n        android:inputType=\"textEmailAddress\"/>\r\n    <EditText\r\n        android:id=\"@+id/dateOfBirth\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        android:maxLines=\"1\"\r\n        android:textSize=\"20sp\"\r\n        android:hint=\"Date of Birth\"\r\n        android:inputType=\"date\"\r\n        />\r\n    <EditText\r\n        android:id=\"@+id/password\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        android:maxLines=\"1\"\r\n        android:textSize=\"20sp\"\r\n        android:hint=\"Enter your Password\"\r\n        android:inputType=\"textPassword\"\r\n        />\r\n\r\n    <TextView\r\n        android:id=\"@+id/gender\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:text=\"Gender\"\r\n        android:paddingTop=\"10dp\"\r\n        android:layout_marginLeft=\"10dp\"\r\n        android:textColor=\"#1E1C1C\"\r\n        android:textSize=\"20sp\" />\r\n\r\n    <RadioGroup\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"70dp\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/simpleRadioButton\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Male\"\r\n            android:textSize=\"20sp\"/>\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/simpleRadioButton1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Female\"\r\n\r\n            android:textSize=\"20sp\"/>\r\n        <RadioButton\r\n            android:id=\"@+id/simpleRadioButton2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Other\"\r\n\r\n            android:textSize=\"20sp\"/>\r\n    </RadioGroup>\r\n\r\n    <Button\r\n        android:id=\"@+id/signUpButton\"\r\n        android:layout_width=\"144dp\"\r\n        android:layout_height=\"63dp\"\r\n        android:layout_marginLeft=\"120dp\"\r\n        android:text=\"SignUp\"\r\n        android:textSize=\"20sp\"\r\n        android:onClick=\"register\"\r\n        />\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_sign_up.xml	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ app/src/main/res/layout/activity_sign_up.xml	(date 1605556617425)
@@ -9,7 +9,7 @@
     >
 
     <TextView
-        android:id="@+id/textView2"
+        android:id="@+id/tvSignUp"
         android:layout_width="match_parent"
         android:layout_height="100dp"
         android:layout_marginTop="5dp"
@@ -19,47 +19,55 @@
         android:textSize="40sp" />
 
     <EditText
-        android:id="@+id/name"
+        android:id="@+id/etnameregister"
         android:layout_width="match_parent"
-        android:layout_height="80dp"
+        android:layout_height="wrap_content"
         android:maxLines="1"
-        android:textSize="20sp"
+        android:textSize="18sp"
         android:hint="Enter your Name"
         android:inputType="textPersonName"
         />
 
     <EditText
-        android:id="@+id/editTextTextEmailAddress"
+        android:id="@+id/etEmailregister"
         android:layout_width="match_parent"
-        android:layout_height="80dp"
+        android:layout_height="wrap_content"
         android:ems="10"
         android:maxLines="1"
         android:hint="Email "
         android:inputType="textEmailAddress"/>
+
     <EditText
-        android:id="@+id/dateOfBirth"
+        android:id="@+id/etDobregister"
         android:layout_width="match_parent"
-        android:layout_height="80dp"
+        android:layout_height="wrap_content"
         android:maxLines="1"
         android:textSize="20sp"
         android:hint="Date of Birth"
         android:inputType="date"
         />
+
     <EditText
-        android:id="@+id/password"
+        android:id="@+id/etpasswrdregister"
         android:layout_width="match_parent"
-        android:layout_height="80dp"
+        android:layout_height="wrap_content"
         android:maxLines="1"
         android:textSize="20sp"
         android:hint="Enter your Password"
         android:inputType="textPassword"
         />
 
+    <LinearLayout
+        android:id="@+id/llGender"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
     <TextView
-        android:id="@+id/gender"
+        android:id="@+id/tvgenderregister"
         android:layout_width="match_parent"
-        android:layout_height="50dp"
-        android:text="Gender"
+        android:layout_height="wrap_content"
+        android:text="Gender - "
         android:paddingTop="10dp"
         android:layout_marginLeft="10dp"
         android:textColor="#1E1C1C"
@@ -67,25 +75,26 @@
 
     <RadioGroup
         android:layout_width="match_parent"
-        android:layout_height="70dp"
-        android:orientation="horizontal">
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:padding="10dp">
 
         <RadioButton
-            android:id="@+id/simpleRadioButton"
+            android:id="@+id/rbmaleregister"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:text="Male"
             android:textSize="20sp"/>
 
         <RadioButton
-            android:id="@+id/simpleRadioButton1"
+            android:id="@+id/rbfemaleregister"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:text="Female"
 
             android:textSize="20sp"/>
         <RadioButton
-            android:id="@+id/simpleRadioButton2"
+            android:id="@+id/rbOtherregister"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:text="Other"
@@ -93,13 +102,14 @@
             android:textSize="20sp"/>
     </RadioGroup>
 
+    </LinearLayout>
     <Button
-        android:id="@+id/signUpButton"
+        android:id="@+id/btnSignup"
         android:layout_width="144dp"
         android:layout_height="63dp"
         android:layout_marginLeft="120dp"
         android:text="SignUp"
         android:textSize="20sp"
-        android:onClick="register"
+        android:onClick="registerUser"
         />
 </LinearLayout>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Sep 10 14:08:18 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1605080921188)
@@ -1,6 +1,6 @@
-#Thu Sep 10 14:08:18 IST 2020
+#Wed Nov 11 13:18:41 IST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ .idea/gradle.xml	(date 1605080816656)
@@ -14,6 +14,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.snapy\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.firebase:firebase-analytics:17.5.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.4.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ app/build.gradle	(date 1605076839337)
@@ -26,6 +26,7 @@
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
     implementation "androidx.cardview:cardview:1.0.0"
+    implementation 'androidx.appcompat:appcompat:1.1.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
     implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
     testImplementation 'junit:junit:4.12'
Index: app/src/main/java/com/example/snapy/LogIn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.snapy;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class LogIn extends AppCompatActivity {\r\n    EditText email,password;\r\n    Button login;\r\n    TextView textView;\r\n    private FirebaseAuth mAuth;\r\n    public void alreadyRegister(View view){\r\n        loginInFunction();\r\n    }\r\n    public void loginInFunction(){\r\n        mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString())\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            if(mAuth.getCurrentUser().isEmailVerified()) {\r\n                                FirebaseUser user = mAuth.getCurrentUser();\r\n                                welcomeActivity();\r\n                            }else{\r\n                                Toast.makeText(LogIn.this, \"Please verify email address to login\", Toast.LENGTH_SHORT).show();\r\n\r\n                            }\r\n\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n\r\n                            Toast.makeText(getApplicationContext(), \"Authentication failed.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n                });\r\n    }\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_log_in);\r\n        login=findViewById(R.id.Button);\r\n        email=findViewById(R.id.editTextTextEmailAddress2);\r\n        password=findViewById(R.id.editTextPassword2);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        textView=findViewById(R.id.forgetTextView);\r\n    }\r\n    public void ResetPAsswordLink(View view){\r\n        final EditText editText=new EditText(view.getContext());\r\n        AlertDialog.Builder resetPasswordDialog=new AlertDialog.Builder(view.getContext());\r\n        resetPasswordDialog.setTitle(\"Reset Password ?\");\r\n        resetPasswordDialog.setMessage(\"Enter Your Emailid\");\r\n        resetPasswordDialog.setView(editText);\r\n        resetPasswordDialog.setPositiveButton(\"Send Link\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                String email=editText.getText().toString();\r\n                mAuth.sendPasswordResetEmail(email).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(LogIn.this,\"Password Resend Link Successfully Send\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(LogIn.this, \"Error ! Password Resend link not send\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n        resetPasswordDialog.create().show();\r\n    }\r\n    public void welcomeActivity(){\r\n        Intent intent=new Intent(this,WelcomeActivity.class);\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/snapy/LogIn.java	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ app/src/main/java/com/example/snapy/LogIn.java	(date 1605555437755)
@@ -51,8 +51,6 @@
                                     Toast.LENGTH_SHORT).show();
 
                         }
-
-
                     }
                 });
     }
@@ -70,7 +68,7 @@
         final EditText editText=new EditText(view.getContext());
         AlertDialog.Builder resetPasswordDialog=new AlertDialog.Builder(view.getContext());
         resetPasswordDialog.setTitle("Reset Password ?");
-        resetPasswordDialog.setMessage("Enter Your Emailid");
+        resetPasswordDialog.setMessage("Enter Your Email id");
         resetPasswordDialog.setView(editText);
         resetPasswordDialog.setPositiveButton("Send Link", new DialogInterface.OnClickListener() {
             @Override
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ .idea/misc.xml	(date 1605080944192)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectCodeStyleConfiguration\">\r\n  <code_scheme name=\"Project\" version=\"173\">\r\n    <JetCodeStyleSettings>\r\n      <option name=\"PACKAGES_TO_USE_STAR_IMPORTS\">\r\n        <value>\r\n          <package name=\"java.util\" alias=\"false\" withSubpackages=\"false\" />\r\n          <package name=\"kotlinx.android.synthetic\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"io.ktor\" alias=\"false\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"PACKAGES_IMPORT_LAYOUT\">\r\n        <value>\r\n          <package name=\"\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"java\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"javax\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"kotlin\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"\" alias=\"true\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n    </JetCodeStyleSettings>\r\n    <codeStyleSettings language=\"XML\">\r\n      <indentOptions>\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"4\" />\r\n      </indentOptions>\r\n      <arrangement>\r\n        <rules>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:android</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:id</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>style</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>ANDROID_ATTRIBUTE_ORDER</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>.*</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n        </rules>\r\n      </arrangement>\r\n    </codeStyleSettings>\r\n  </code_scheme>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(revision c41258f44ccc74bd3cee7a8ccb8fe209ea3bd7e8)
+++ .idea/codeStyles/Project.xml	(date 1600359655065)
@@ -3,18 +3,9 @@
     <JetCodeStyleSettings>
       <option name="PACKAGES_TO_USE_STAR_IMPORTS">
         <value>
-          <package name="java.util" alias="false" withSubpackages="false" />
-          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
-          <package name="io.ktor" alias="false" withSubpackages="true" />
-        </value>
-      </option>
-      <option name="PACKAGES_IMPORT_LAYOUT">
-        <value>
-          <package name="" alias="false" withSubpackages="true" />
-          <package name="java" alias="false" withSubpackages="true" />
-          <package name="javax" alias="false" withSubpackages="true" />
-          <package name="kotlin" alias="false" withSubpackages="true" />
-          <package name="" alias="true" withSubpackages="true" />
+          <package name="java.util" withSubpackages="false" static="false" />
+          <package name="kotlinx.android.synthetic" withSubpackages="true" static="false" />
+          <package name="io.ktor" withSubpackages="true" static="false" />
         </value>
       </option>
     </JetCodeStyleSettings>
